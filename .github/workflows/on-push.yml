name: vscode-lean4 build

on: [push, pull_request]

jobs:
  build-and-test:
    strategy:
      matrix:
        include:
          - name: Linux
            os: ubuntu-latest
            artifact: build-Linux release
          # - name: macOS
          #   os: macos-latest
          #   artifact: build-macOS
          - name: Windows
            os: windows-latest
            artifact: build-Windows
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
        if: matrix.os == 'windows-latest'
      - name: Build
        run: |
          npm ci
          npx lerna bootstrap --ci
          npm run build
          npx lerna run --scope=lean4 package
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: vscode-lean4
          path: 'vscode-lean4/lean4-*.vsix'
      - name: Lint
        run: npm run lint
      - name: Install Brew Packages
        run: |
          brew install ccache tree zstd coreutils
        if: matrix.os == 'macos-latest'
      - name: Download Lean4 build artifact
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        uses: dawidd6/action-download-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: .
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: ci.yml
          workflow_conclusion: success
          branch: master
          repo: leanprover/lean4
          check_artifacts:  true
          search_artifacts: true
      - name: Unpack Lean4 build on Ubuntu or MacOS
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          mkdir lean4
          tar --use-compress-program=unzstd -xvf lean-*.tar.zst -C lean4 --strip-components 1
          ls -al ./lean4/bin
          chmod u+x ./lean4/bin/*
          ./lean4/bin/lean --version
      - name: Download and Extract Lean4 nightly build on Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          gh auth login --with-token "${{ secrets.GITHUB_TOKEN }}"
          gh release list --repo leanprover/lean4-nightly --limit 10
          $version = (gh release list --repo leanprover/lean4-nightly --limit 1).Split("`t")[0]
          $zipFile = "lean-4.0.0-$version-windows.zip"
          gh release download  $version -p $zipFile --repo leanprover/lean4-nightly
          Expand-Archive -LiteralPath $zipFile -DestinationPath lean4
          Get-ChildItem -Path lean4 | Get-ChildItem | Move-Item -Destination lean4
          dir .\lean4\bin
          .\lean4\bin\lean --version
      - name: Set path to elan on Linux or macOS
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          echo "$HOME/.elan/bin" >> $GITHUB_PATH
      - name: Set path to elan on Windows
        if: matrix.os == 'windows-latest'
        run: |
          echo "%HOMEPATH%\.elan\bin" >> $GITHUB_PATH
      - name: Setup elan toolchain on Linux or macOS
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          curl -O --location https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh
          chmod u+x elan-init.sh
          ./elan-init.sh -y --default-toolchain leanprover/lean4:nightly
          echo Checking location "$HOME/.elan/bin"...
          ls -al "$HOME/.elan/bin"
          elan --version
          elan toolchain link master "$(pwd)/lean4"
      - name: Setup elan toolchain on Windows
        shell: pwsh
        if: matrix.os == 'windows-latest'
        run: |
          curl -O --location https://raw.githubusercontent.com/leanprover/elan/master/elan-init.ps1
          ./elan-init.ps1 -y --default-toolchain leanprover/lean4:nightly
          Write-Host Checking location "$HOME\.elan\bin"...
          dir "$HOME\.elan\bin"
          elan --version
          elan toolchain link master lean4
      - name: Install 'leanprover/lean4:stable' version
        run: |
          elan toolchain install leanprover/lean4:stable
          elan toolchain list
      - name: Run tests
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npx lerna run --scope=lean4 test
